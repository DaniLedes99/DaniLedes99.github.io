{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dani\\\\Documents\\\\GitHub\\\\taskexample.github.io\\\\src\\\\index.jsx\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport App from \"./App.jsx\";\nimport { TaskContextProvider } from \"./Context/TaskContext.jsx\";\nimport \"./index.css\";\n\n//rfce para crear componente//\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst user = [{\n  id: 1,\n  name: \"Ryan\",\n  image: \"https://robohash.org/user1\"\n}, {\n  id: 2,\n  name: \"Joe\",\n  image: \"https://robohash.org/user2\"\n}];\nReactDOM.createRoot(document.getElementById(\"root\")).render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(TaskContextProvider, {\n    children: [/*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), user.map((user, index) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: user.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: user.image\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 23,\n  columnNumber: 3\n}, this));","map":{"version":3,"names":["React","ReactDOM","App","TaskContextProvider","jsxDEV","_jsxDEV","user","id","name","image","createRoot","document","getElementById","render","StrictMode","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","src"],"sources":["C:/Users/Dani/Documents/GitHub/taskexample.github.io/src/index.jsx"],"sourcesContent":["import React from \"react\";\r\nimport ReactDOM from \"react-dom/client\";\r\nimport App from \"./App.jsx\";\r\nimport { TaskContextProvider } from \"./Context/TaskContext.jsx\";\r\nimport \"./index.css\";\r\n\r\n//rfce para crear componente//\r\n\r\nconst user = [\r\n  {\r\n    id: 1,\r\n    name: \"Ryan\",\r\n    image: \"https://robohash.org/user1\",\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"Joe\",\r\n    image: \"https://robohash.org/user2\",\r\n  },\r\n];\r\n\r\nReactDOM.createRoot(document.getElementById(\"root\")).render(\r\n  <React.StrictMode>\r\n    <TaskContextProvider>\r\n      <App />\r\n      {user.map((user, index) => {\r\n        return (\r\n          <div key={index}>\r\n            <h1>{user.name}</h1>\r\n            <img src={user.image}></img>\r\n          </div>\r\n        );\r\n      })}\r\n    </TaskContextProvider>\r\n  </React.StrictMode>\r\n);\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAOC,GAAG,MAAM,WAAW;AAC3B,SAASC,mBAAmB,QAAQ,2BAA2B;AAC/D,OAAO,aAAa;;AAEpB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,IAAI,GAAG,CACX;EACEC,EAAE,EAAE,CAAC;EACLC,IAAI,EAAE,MAAM;EACZC,KAAK,EAAE;AACT,CAAC,EACD;EACEF,EAAE,EAAE,CAAC;EACLC,IAAI,EAAE,KAAK;EACXC,KAAK,EAAE;AACT,CAAC,CACF;AAEDR,QAAQ,CAACS,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC,CAACC,MAAM,eACzDR,OAAA,CAACL,KAAK,CAACc,UAAU;EAAAC,QAAA,eACfV,OAAA,CAACF,mBAAmB;IAAAY,QAAA,gBAClBV,OAAA,CAACH,GAAG;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACNb,IAAI,CAACc,GAAG,CAAC,CAACd,IAAI,EAAEe,KAAK,KAAK;MACzB,oBACEhB,OAAA;QAAAU,QAAA,gBACEV,OAAA;UAAAU,QAAA,EAAKT,IAAI,CAACE;QAAI;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACpBd,OAAA;UAAKiB,GAAG,EAAEhB,IAAI,CAACG;QAAM;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA,GAFpBE,KAAK;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGV,CAAC;IAEV,CAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACiB;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACN,CACpB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}